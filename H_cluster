%https://www.mathworks.com/help/stats/hierarchical-clustering.htmlrng default;  

% For reproducibility
train_data1 = csvread( 'Neg vs. Pos correct tones dLight.csv' );
train_data = train_data1(2:8000,:);
train_data = train_data';

%The pdist function calculates the distance between object 1 and object 2, object 1 and object 3, and so on
%until the distances between all the pairs have been calculated. 
%The pdist function returns this distance information in a vector, Y, where each element contains the distance between a pair of objects.
Y=pdist(train_data)

%To make it easier to see the relationship between the distance information generated by pdist 
%and the objects in the original data set, you can reformat the distance vector into a matrix using the squareform function.
%In this matrix, element i,j corresponds to the distance between object i and object j in the original data set.
squareform(Y)

%The linkage function takes the distance information generated by pdist 
%and links pairs of objects that are close together into binary clusters (clusters made up of two objects). 
Z = linkage(Y)

%dendogram with zero averaging (full branches)
%dendrogram(Z, 0)
%dendrogram(Z,0)


H = dendrogram(Z,'Orientation','left','ColorThreshold','default');
set(H,'LineWidth',1)

%verify dissimilarity: cophenetic correlation coefficient to compare the results of clustering the same data 
%set using different distance calculation methods or clustering algorithms. 
c = cophenet(Z,Y)



